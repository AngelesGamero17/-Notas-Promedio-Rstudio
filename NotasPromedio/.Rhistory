data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
plot(rn)
rn
Prueba_N1 = c(18,15,13)
Prueba_N2 = c(7,5,13)
Prueba_N3 = c(11,14,3)
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,20)
Prueba_N2 = c(7,5,13)
Prueba_N3 = c(11,14,3)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,20)
Prueba_N2 = c(7,5,13)
Prueba_N3 = c(11,1,3)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
model <- nnet(
Promedio~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
rn <- neuralnet(
Promedio~N1+N2+N3,
data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
model <- nnet(
Promedio~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
rn <- neuralnet(
Promedio~N1+N2+N3,
data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
rn
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,20)
Prueba_N2 = c(7,5,13)
Prueba_N3 = c(1,1,3)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
datos <- read.csv("notas.csv", sep = ";", header = TRUE)
View(datos)
attach(datos)
names(datos)
model <- nnet(
Promedio~N1+N2+N3,
datos,
size = 6,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 6,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
rn <- neuralnet(
Resultado~N1+N2+N3,
data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
plot(rn)
rn
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,20)
Prueba_N2 = c(7,5,13)
Prueba_N3 = c(1,1,3)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
View(datos)
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,13)
Prueba_N2 = c(7,5,13)
Prueba_N3 = c(1,1,13)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,13)
Prueba_N2 = c(7,5,18)
Prueba_N3 = c(1,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
rn
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,1)
Prueba_N2 = c(7,5,18)
Prueba_N3 = c(1,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
Pred_Reco
Prediccion$net.result,
Prediccion$net.result
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,1)
Prueba_N2 = c(7,5,18)
Prueba_N3 = c(1,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,14)
Prueba_N2 = c(7,5,18)
Prueba_N3 = c(1,1,20)
ueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 6,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
rn <- neuralnet(
Resultado~N1+N2+N3,
data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
plot(rn)
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,14)
Prueba_N2 = c(7,5,18)
Prueba_N3 = c(1,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,14)
Prueba_N2 = c(7,5,8)
Prueba_N3 = c(1,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 6,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
rn <- neuralnet(
Resultado~N1+N2+N3,
data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
rn
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,14)
Prueba_N2 = c(7,5,8)
Prueba_N3 = c(1,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,7)
Prueba_N2 = c(7,5,8)
Prueba_N3 = c(1,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
datos <- read.csv("notas.csv", sep = ";", header = TRUE)
datos <- read.csv("notas.csv", sep = ";", header = TRUE)
attach(datos)
names(datos)
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
library(nnet)
library(neuralnet)
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
rn <- neuralnet(
Resultado~N1+N2+N3,
data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
Prueba_N1 = c(18,15,7)
Prueba_N2 = c(7,5,8)
Prueba_N3 = c(1,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
Prueba_N1 = c(18,15,7)
Prueba_N2 = c(7,5,8)
Prueba_N3 = c(12,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
datos <- read.csv("notas.csv", sep = ";", header = TRUE)
attach(datos)
names(datos)
#crear modelo
# crea una capa oculta para buscar, resolver e interpretar
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
library(neuralnet)
library(nnet, lib.loc = "C:/Program Files/R/R-4.2.1/library")
library(nnet)
datos <- read.csv("notas.csv", sep = ";", header = TRUE)
attach(datos)
names(datos)
#crear modelo
# crea una capa oculta para buscar, resolver e interpretar
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
#creando red neuronal
#entrea el modelo creado para inferir una posible solucioes
rn <- neuralnet(
Resultado~N1+N2+N3,
data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
plot(rn)
rn
#Crear datos de prueba para evaluar Restaurant
Prueba_N1 = c(18,15,7)
Prueba_N2 = c(7,5,8)
Prueba_N3 = c(12,1,20)
#crear data frame
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
# Creadno predicciÃ³n
Prediccion <- compute(rn, Prueba)
# Verificar los datos obtenidos
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
plot(rn)
(datos)
names(datos)
model <- nnet
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
library(nnet)
library(neuralnet)
library(nnet, lib.loc = "C:/Program Files/R/R-4.2.1/library")
model <- nnet(
Resultado~N1+N2+N3,
datos,
size = 5,
rang = 0.1,
decay = 5e-2,
maxit = 5000
)
View(datos)
rn <- neuralnet(
Resultado~N1+N2+N3,
data = datos,
hidden = 5,
act.fct = "logistic",
linear.output = FALSE,
)
plot(rn)
rn <- neuralnet(
Resultado~N1+N2+N3,
data = datos,
hidden = 10,
act.fct = "logistic",
linear.output = FALSE,
)
plot(rn)
rn
Prueba_N1 = c(18,15,7)
Prueba_N2 = c(7,5,8)
Prueba_N3 = c(12,1,20)
Prueba <- data.frame(
Prueba_N1,
Prueba_N2,
Prueba_N3
)
Prediccion <- compute(rn, Prueba)
Pred_Reco <- ifelse(Prediccion$net.result>0.5,"APROBADO", "DESAPROBADO")
Valor <- data.frame(
Prediccion$net.result,
Pred_Reco
)
Valor
